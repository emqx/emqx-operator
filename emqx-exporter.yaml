apiVersion: v1
kind: Service
metadata:
  labels:
    app: emqx-exporter
  name: emqx-exporter-service
spec:
  ports:
    - name: metrics
      port: 8085
      targetPort: metrics
  selector:
    app: emqx-exporter
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emqx-exporter
  labels:
    app: emqx-exporter
spec:
  selector:
    matchLabels:
      app: emqx-exporter
  replicas: 1
  template:
    metadata:
      labels:
        app: emqx-exporter
    spec:
      securityContext:
        runAsUser: 1000
      containers:
        - name: exporter
          image: emqx/emqx-exporter:latest
          imagePullPolicy: IfNotPresent
          args:
            - --emqx.nodes=emqx-dashboard:18083
            - --emqx.auth-username=emqx-operator-controller
            - --emqx.auth-password=ri7p6tpc6qg3bxzosrfgrqhgu5lgzdpsbln3cd7fcr3tre2a8vddunmnvcucsnpi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          ports:
            - containerPort: 8085
              name: metrics
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 20Mi
---
apiVersion: v1
kind: Secret
metadata:
  name: emqx-exporter-secret
  labels:
    app: emqx-exporter
type: Opaque
data:
  username: "ZW1xeC1vcGVyYXRvci1jb250cm9sbGVyCg=="
  password: "cmk3cDZ0cGM2cWczYnh6b3NyZmdycWhndTVsZ3pkcHNibG4zY2Q3ZmNyM3RyZTJhOHZkZHVubW52Y3Vjc25waQo="
---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: emqx-metrics
  labels:
    app: emqx-metrics
spec:
  selector:
    matchLabels:
      # the label is the same as the label of emqx pod
      apps.emqx.io/instance: emqx
      apps.emqx.io/managed-by: emqx-operator
  podMetricsEndpoints:
    # the name of emqx dashboard containerPort
    - port: dashboard
      basicAuth:
        username:
          name: emqx-exporter-secret
          key: username
        password:
          name: emqx-exporter-secret
          key: password
      authorization:
      interval: 5s
      path: /api/v5/prometheus/stats
      relabelings:
        - action: replace
          # user-defined cluster name, requires unique
          replacement: emqx5.0
          targetLabel: cluster
        - action: replace
          # fix value, don't modify
          replacement: emqx
          targetLabel: from
        - action: replace
          # fix value, don't modify
          sourceLabels: ['pod']
          targetLabel: "instance"
  namespaceSelector:
    # modify the namespace if your EMQX cluster deployed in other namespace
    #matchNames:
    #  - default

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: emqx-exporter
  labels:
    app: emqx-exporter
spec:
  selector:
    matchLabels:
      # the label is the same as the label of emqx-exporter svc
      app: emqx-exporter
  endpoints:
    - port: metrics
      interval: 5s
      path: /metrics
      relabelings:
        - action: replace
          # user-defined cluster name, requires unique
          replacement: emqx5.0
          targetLabel: cluster
        - action: replace
          # fix value, don't modify
          replacement: exporter
          targetLabel: from
        - action: replace
          # fix value, don't modify
          sourceLabels: ['pod']
          regex: '(.*)-.*-.*'
          replacement: $1
          targetLabel: "instance"
        - action: labeldrop
          # fix value, don't modify
          regex: 'pod'
  namespaceSelector:
    # modify the namespace if your exporter deployed in other namespace
    #matchNames:
    #  - default
