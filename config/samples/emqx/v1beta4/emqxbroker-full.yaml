apiVersion: apps.emqx.io/v1beta4
kind: EmqxBroker
metadata:
  name: emqx
  labels:
    "apps.emqx.io/instance": "emqx"
spec:
  replicas: 3
  # volumeClaimTemplates:
  #   storageClassName: standard
  #   resources:
  #     requests:
  #       storage: 20Mi
  #   accessModes:
  #     - ReadWriteOnce
  template:
    metadata:
      labels:
        foo: bar
      annotations:
        foo: bar
    spec:
      # imagePullPolicy: [fake-secret]
      # nodeName:
      # nodeSelector:
      # affinity:
      # toleRations:
      emqxContainer:
        image: emqx/emqx:4.4.8
        emqxConfig:
          name: emqx
          cluster.discovery: dns
          cluster.dns.type: srv
          cluster.dns.app: emqx
          cluster.dns.name: emqx-headless.default.svc.cluster.local
          listener.tcp.external: "1883"
        emqxACL:
          - "{allow, all}."
      # extraContainers:
      #   - name: extra
      #     image: busybox:stable
      #     command:
      #       - /bin/sh
      #       - -c
      #       - |
      #         tail -f /dev/null
      # initContainers:
      #   - name: busybox
      #     image: busybox:stable
      #     securityContext:
      #       runAsUser: 0
      #       runAsGroup: 0
      #       capabilities:
      #         add:
      #         - SYS_ADMIN
      #         drop:
      #         - ALL
      #     command:
      #       - /bin/sh
      #       - -c
      #       - |
      #         mount -o remount rw /proc/sys
      #         sysctl -w net.core.somaxconn=65535
      #         sysctl -w net.ipv4.ip_local_port_range="1024 65535"
      #         sysctl -w kernel.core_uses_pid=0
      #         sysctl -w net.ipv4.tcp_tw_reuse=1
      #         sysctl -w fs.nr_open=1000000000
      #         sysctl -w fs.file-max=1000000000
      #         sysctl -w net.ipv4.ip_local_port_range='1025 65534'
      #         sysctl -w net.ipv4.udp_mem='74583000 499445000 749166000'
      #         sysctl -w net.ipv4.tcp_max_sync_backlog=163840
      #         sysctl -w net.core.netdev_max_backlog=163840
      #         sysctl -w net.core.optmem_max=16777216
      #         sysctl -w net.ipv4.tcp_rmem='1024 4096 16777216'
      #         sysctl -w net.ipv4.tcp_wmem='1024 4096 16777216'
      #         sysctl -w net.ipv4.tcp_max_tw_buckets=1048576
      #         sysctl -w net.ipv4.tcp_fin_timeout=15
      #         sysctl -w net.core.rmem_default=262144000
      #         sysctl -w net.core.wmem_default=262144000
      #         sysctl -w net.core.rmem_max=262144000
      #         sysctl -w net.core.wmem_max=262144000
      #         sysctl -w net.ipv4.tcp_mem='378150000  504200000  756300000'
      #         sysctl -w net.netfilter.nf_conntrack_max=1000000
      #         sysctl -w net.netfilter.nf_conntrack_tcp_timeout_time_wait=30

  serviceTemplate:
    metadata:
      name: emqx
      namespace: default
      labels:
        "apps.emqx.io/instance": "emqx"
    spec:
      type: NodePort
      selector:
        "apps.emqx.io/instance": "emqx"
      ports:
        - name: "http-management-8081"
          port: 8081
          protocol: "TCP"
          targetPort: 8081
        - name: "http-dashboard-18083"
          port: 18083
          protocol: "TCP"
          targetPort: 18083
          nodePort: 30648
        - name: "mqtt-tcp-1883"
          protocol: "TCP"
          port: 1883
          targetPort: 1883
          nodePort: 30649
        - name: "mqtt-tcp-11883"
          protocol: "TCP"
          port: 11883
          targetPort: 11883
          nodePort: 30650
        - name: "mqtt-ws-8083"
          protocol: "TCP"
          port: 8083
          targetPort: 8083
          nodePort: 30651
        - name: "mqtt-wss-8084"
          protocol: "TCP"
          port: 8084
          targetPort: 8084
          nodePort: 30652



  env:
    - name: Foo
      value: Bar
  # imagePullPolicy: [fake-secret]
  # nodeName:
  # nodeSelector:
  # affinity:
  # toleRations:
  # persistent:
  #    storageClassName: standard
  #    resources:
  #      requests:
  #        storage: 20Mi
  #    accessModes:
  #    - ReadWriteOnce
  # initContainers:
  #   - name: busybox
  #     image: busybox:stable
  #     securityContext:
  #       runAsUser: 0
  #       runAsGroup: 0
  #       capabilities:
  #         add:
  #         - SYS_ADMIN
  #         drop:
  #         - ALL
  #     command:
  #       - /bin/sh
  #       - -c
  #       - |
  #         mount -o remount rw /proc/sys
  #         sysctl -w net.core.somaxconn=65535
  #         sysctl -w net.ipv4.ip_local_port_range="1024 65535"
  #         sysctl -w kernel.core_uses_pid=0
  #         sysctl -w net.ipv4.tcp_tw_reuse=1
  #         sysctl -w fs.nr_open=1000000000
  #         sysctl -w fs.file-max=1000000000
  #         sysctl -w net.ipv4.ip_local_port_range='1025 65534'
  #         sysctl -w net.ipv4.udp_mem='74583000 499445000 749166000'
  #         sysctl -w net.ipv4.tcp_max_sync_backlog=163840
  #         sysctl -w net.core.netdev_max_backlog=163840
  #         sysctl -w net.core.optmem_max=16777216
  #         sysctl -w net.ipv4.tcp_rmem='1024 4096 16777216'
  #         sysctl -w net.ipv4.tcp_wmem='1024 4096 16777216'
  #         sysctl -w net.ipv4.tcp_max_tw_buckets=1048576
  #         sysctl -w net.ipv4.tcp_fin_timeout=15
  #         sysctl -w net.core.rmem_default=262144000
  #         sysctl -w net.core.wmem_default=262144000
  #         sysctl -w net.core.rmem_max=262144000
  #         sysctl -w net.core.wmem_max=262144000
  #         sysctl -w net.ipv4.tcp_mem='378150000  504200000  756300000'
  #         sysctl -w net.netfilter.nf_conntrack_max=1000000
  #         sysctl -w net.netfilter.nf_conntrack_tcp_timeout_time_wait=30
  # extraContainers:
  #   - name: extra
  #     image: busybox:stable
  #     command:
  #       - /bin/sh
  #       - -c
  #       - |
  #         tail -f /dev/null
  emqxTemplate:
    # username: "admin"
    # password: "public"
    image: emqx/emqx:4.4.8
    imagePullPolicy: IfNotPresent
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      fsGroupChangePolicy: Always
    extraVolumes:
      - name: fake-volume
        emptyDir: {}
    extraVolumeMounts:
      - name: fake-volume
        mountPath: /tmp/fake
    args:
      - bash
      - -c
      - |
        printenv | grep "^EMQX_"
        emqx foreground
    config:
      name: emqx
      cluster.discovery: dns
      cluster.dns.type: srv
      cluster.dns.app: emqx
      cluster.dns.name: emqx-headless.default.svc.cluster.local
      listener.tcp.external: "1883"
    acl:
      - "{allow, all}."
    modules:
      - name: "emqx_mod_acl_internal"
        enable: true
      - name: "emqx_mod_presence"
        enable: true
    readinessProbe:
      httpGet:
        path: /status
        port: 8081
      initialDelaySeconds: 10
      periodSeconds: 5
      failureThreshold: 12
    livenessProbe:
      httpGet:
        path: /status
        port: 8081
      initialDelaySeconds: 60
      periodSeconds: 30
      failureThreshold: 3
    # startupProbe:
    #   httpGet:
    #     path: /status
    #     port: 8081
    #   initialDelaySeconds: 10
    #   periodSeconds: 5
    #   failureThreshold: 12
    resources:
      requests:
        memory: "64Mi"
        cpu: "125m"
      limits:
        memory: "1024Mi"
        cpu: "500m"
    serviceTemplate:
      metadata:
        name: emqx
        namespace: default
        labels:
          "apps.emqx.io/instance": "emqx"
      spec:
        type: NodePort
        selector:
          "apps.emqx.io/instance": "emqx"
        ports:
          - name: "http-management-8081"
            port: 8081
            protocol: "TCP"
            targetPort: 8081
          - name: "mqtt-tcp-1883"
            protocol: "TCP"
            port: 1883
            targetPort: 1883
            nodePort: 30649
          - name: "mqtt-tcp-11883"
            protocol: "TCP"
            port: 11883
            targetPort: 11883
            nodePort: 30650
          - name: "mqtt-ws-8083"
            protocol: "TCP"
            port: 8083
            targetPort: 8083
            nodePort: 30651
          - name: "mqtt-wss-8084"
            protocol: "TCP"
            port: 8084
            targetPort: 8084
            nodePort: 30652
