name: Compatibility Test Suite For Cloud

on:
  schedule:
    - cron: '0 0 * * *'
  push:
    tags:
      - "*"

jobs:
  Aliyun:
    runs-on: ubuntu-latest

    if: github.repository_owner == 'emqx'

    strategy:
      fail-fast: false
      matrix:
        kubernetes-version:
          - "1.22.3-aliyun.1"

    steps:
    - uses: JCBLE/setup-aliyun-cli@v1.1.0
      with:
        access-key-id: ${{ secrets.ALIYUN_ACCESS_KEY_ID }}
        access-key-secret: ${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}
        region: "us-west-1"
    -  name: Create ASK
       id: ask
       run: |
        cat <<EOF >create.json
        {
          "cluster_type": "Ask",
          "kubernetes_version": "${{ matrix.kubernetes-version }}",
          "name": "test-serverless-${RANDOM}",
          "region_id": "us-west-1",
          "snat_entry": true,
          "private_zone": false,
          "tags": [
            {"key": "env", "value": "test"}
          ]
        }
        EOF
        set -euo pipefail
        cluster_id=$(aliyun cs POST /clusters --header "Content-Type=application/json" --body "$(cat create.json)" | jq '.cluster_id' | tr -d '"')
        echo "::set-output name=cluster_id::$cluster_id"
    - name: Wait ASK running
      timeout-minutes: 10
      run: |
        set -euo pipefail
        while [ "$(aliyun cs GET /clusters/${{ steps.ask.outputs.cluster_id }} | jq ".state" | tr -d '"')" != "running" ]; do
          echo "waiting ASK cluster running"
          sleep 1
        done
    - uses: aliyun/ack-set-context@v1
      with:
        access-key-id: ${{ secrets.ALIYUN_ACCESS_KEY_ID }}
        access-key-secret: ${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}
        cluster-id: ${{ steps.ask.outputs.cluster_id }}
    - uses: actions/checkout@v2
    - name: Install cert-manager
      timeout-minutes: 10
      run: |
        set -euo pipefail
        kubectl apply -k .github/config/aliyun/cert-manager
        while [ "$(kubectl get pods -l "app.kubernetes.io/instance=cert-manager,app=webhook" -n cert-manager -o json | jq '.items[0].status.containerStatuses[] | select(.ready==true) | .containerID')" = "" ]; do
          echo "waiting cert-manager webhook pod running"
          sleep 1
        done
    - name: Deploy operator
      timeout-minutes: 10
      run: |
        set -euo pipefail
        kubectl apply -k .github/config/aliyun/emqx-operator --server-side --force-conflicts
        while [ "$(kubectl get pods -l "control-plane=controller-manager" -n emqx-operator-system -o json | jq '.items[0].status.containerStatuses[] | select(.ready==true) | .containerID')" = "" ]; do
          echo "waiting operator controller pod running"
          sleep 1
        done
    - name: Deploy emqx
      timeout-minutes: 10
      run: |
        set -euo pipefail
        cat << "EOF" | kubectl apply -f -
        apiVersion: apps.emqx.io/v1beta3
        kind: EmqxBroker
        metadata:
          name: emqx
          annotations:
            k8s.aliyun.com/eci-with-eip: "true"
        spec:
          emqxTemplate:
            image: emqx/emqx:4.4.3
        EOF
        while ! kubectl describe sts emqx | grep -qE '^Pods[ \t]+Status:[ \t]+3 Running.*'; do
          echo "waiting emqx pod running"
          sleep 1
        done
    - name: Delete resource
      timeout-minutes: 10
      run: |
        kubectl delete emqx emqx
        kubectl delete -k .github/config/aliyun/emqx-operator
        kubectl delete -k .github/config/aliyun/cert-manager
        while ! aliyun cs DELETE /clusters/${{ steps.ask.outputs.cluster_id }}; do
          echo "retry delete ASK"
          sleep 1
        done
