name: Compatibility Test Suite

on:
  schedule:
    - cron: '0 */6 * * *'
  push:
    tags:
      - "*"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        kubernetes-version:
          - "v1.20.13"
          - "v1.21.7"
          - "v1.22.4"
          - "v1.23.0"
    steps:
      - run: minikube start --kubernetes-version="${{ matrix.kubernetes-version }}"
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18.3'
      - name: install kubebuilder
        run: |
          OS=$(uname -s | tr '[:upper:]' '[:lower:]')
          ARCH=$(uname -m | sed 's/x86_64/amd64/')
          curl -fsL "https://storage.googleapis.com/kubebuilder-tools/kubebuilder-tools-1.16.4-${OS}-${ARCH}.tar.gz" -o kubebuilder-tools
          tar -zxvf kubebuilder-tools
          sudo mv kubebuilder/ /usr/local/kubebuilder
      - run: make test

  deployment:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        kubernetes-version:
          - "v1.20.13"
          - "v1.21.7"
          - "v1.22.4"
          - "v1.23.0"
        apiVersion:
          - v1beta3
        emqx:
          - [EmqxBroker, emqx, "config/samples/emqx/v1beta3/emqx.yaml"]
          - [EmqxEnterprise, emqx-ee, "config/samples/emqx/v1beta3/emqx-ee.yaml"]
    steps:
      - run: minikube start --kubernetes-version="${{ matrix.kubernetes-version }}"
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18.3'
      - name: Deploy operator
        timeout-minutes: 5
        uses: ./.github/actions/deploy-operator
        with:
          repository: ghcr.io/${{ github.repository }}
          tag: latest
      - name: Deploy emqx
        timeout-minutes: 5
        uses: ./.github/actions/deploy-emqx
        with:
          apiVersion: ${{ matrix.apiVersion }}
          kind:  ${{ matrix.emqx[0] }}
          name: ${{ matrix.emqx[1] }}
          file: ${{ matrix.emqx[2] }}
      - if: failure()
        run: kubectl describe sts ${{ matrix.emqx[0]}}
      - if: failure()
        run: kubectl describe pods -l "cluster=emqx"
      - if: failure()
        run: kubectl exec -i ${{ matrix.emqx[0] }}-0 -- curl --silent --basic -u admin:public -X GET http://localhost:8081/api/v4/brokers | jq '.data'
      - if: failure()
        run: kubectl logs ${{ matrix.emqx[0] }}-0 -c emqx --tail=1000
      - if: failure()
        run: kubectl logs ${{ matrix.emqx[0] }}-1 -c emqx --tail=1000
      - if: failure()
        run: kubectl logs ${{ matrix.emqx[0] }}-2 -c emqx --tail=1000
      - if: failure()
        run: kubectl logs ${{ matrix.emqx[0] }}-3 -c emqx --tail=1000
      - if: failure()
        run: kubectl logs ${{ matrix.emqx[0] }}-4 -c emqx --tail=1000
      - if: failure()
        run: kubectl logs -l "control-plane=controller-manager" -n emqx-operator-system -c manager --tail=1000
