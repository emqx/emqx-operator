name: Compatibility Test Suite

on:
  schedule:
    - cron:  '0 */6 * * *'
  push:
    tags:
      - "*"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        kubernetes-version:
          - "v1.20.13"
          - "v1.21.7"
          - "v1.22.4"
          - "v1.23.0"
    steps:
      - run: minikube start --kubernetes-version="${{ matrix.kubernetes-version }}"
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.17.3'
      - name: install kubebuilder
        run: |
          OS=$(uname -s | tr '[:upper:]' '[:lower:]')
          ARCH=$(uname -m | sed 's/x86_64/amd64/')
          curl -fsL "https://storage.googleapis.com/kubebuilder-tools/kubebuilder-tools-1.16.4-${OS}-${ARCH}.tar.gz" -o kubebuilder-tools
          tar -zxvf kubebuilder-tools
          sudo mv kubebuilder/ /usr/local/kubebuilder
      - run: make test
      - run: go tool cover -func=cover.out

  deployment:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        kubernetes-version:
          - "v1.20.13"
          - "v1.21.7"
          - "v1.22.4"
          - "v1.23.0"
        apiVersion:
          - v1beta1
          - v1beta2
        emqx:
          - [emqx, "emqx/emqx:4.3.11"]
          - [emqx-ee, "emqx/emqx-ee:4.3.6"]
    steps:
      - run: minikube start --kubernetes-version="${{ matrix.kubernetes-version }}"
      - name: install cert-manager
        run: |
          helm repo add jetstack https://charts.jetstack.io
          helm repo update
          helm install \
            cert-manager jetstack/cert-manager \
            --namespace cert-manager \
            --create-namespace \
            --version v1.6.1 \
            --set installCRDs=true
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.17.3'
      - name: Build image
        env:
          IMG: "emqx/emqx-operator-controller:${{ github.sha }}"
        run: eval $(minikube docker-env) && docker build -t $IMG .
      - name: Deploy controller
        env:
          IMG: "emqx/emqx-operator-controller:${{ github.sha }}"
        run: make deploy
      - name: Check operator
        timeout-minutes: 15
        run: |
          set -euo pipefail
          while [ "$(kubectl get pods -l "control-plane=controller-manager" -n emqx-operator-system -o json | jq '.items[0].status.containerStatuses[] | select(.ready==true) | .containerID')" = "" ]; do
            echo "waiting operator controller pod running"
            sleep 1
          done
      - name: Deploy emqx
        timeout-minutes: 20
        uses: ./.github/actions/deployment
        with:
          apiVersion: ${{ matrix.apiVersion }}
          kind:  ${{ matrix.emqx[0] }}
          image: ${{ matrix.emqx[1] }}
      - name: Get emqx logs
        if: failure()
        run: |
          set -x
          kubectl describe sts ${{ matrix.emqx[0]}}
          kubectl exec -i ${{ matrix.emqx[0]}}-0 -- curl --silent --basic -u admin:public -X GET http://localhost:8081/api/v4/brokers | jq '.data'
          kubectl logs -l "cluster=emqx"
      - name: Get controller status
        if: failure()
        run: |
          set -x
          kubectl logs -l "control-plane=controller-manager" -n emqx-operator-system -c manager
