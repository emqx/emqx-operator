name: Compatibility Test Suite

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'
  push:
    tags:
      - "*"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        kubernetes-version:
          - "v1.20.15"
          - "v1.21.14"
          - "v1.22.12"
          - "v1.23.9"
          - "v1.24.3"
          - "v1.25.0"
    steps:
      - run: minikube start --kubernetes-version="${{ matrix.kubernetes-version }}"
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18.3'
      - name: install kubebuilder
        run: |
          OS=$(uname -s | tr '[:upper:]' '[:lower:]')
          ARCH=$(uname -m | sed 's/x86_64/amd64/')
          curl -fsL "https://storage.googleapis.com/kubebuilder-tools/kubebuilder-tools-1.16.4-${OS}-${ARCH}.tar.gz" -o kubebuilder-tools
          tar -zxvf kubebuilder-tools
          sudo mv kubebuilder/ /usr/local/kubebuilder
      - run: make test
      - name: Install goveralls
        run: go install github.com/mattn/goveralls@latest
      - name: Send coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: goveralls -coverprofile=cover.out -service=github -parallel -flagname=go-test-${{ matrix.kubernetes-version }}

  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true

  build-image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-buildx-action@v1
    - uses: docker/setup-qemu-action@v1
      with:
        image: tonistiigi/binfmt:latest
        platforms: all
    - uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
    - uses: docker/metadata-action@v3
      id: meta
      with:
        images: ghcr.io/${{ github.repository }}
        flavor: |
          latest=true
        tags: |
          type=ref,event=branch
          type=ref,event=tag
          type=semver,pattern={{version}}
    - uses: docker/build-push-action@v2
      with:
        push: true
        pull: true
        no-cache: true
        platforms: linux/amd64
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deployment:
    runs-on: ubuntu-latest
    needs: build-image
    strategy:
      fail-fast: false
      matrix:
        kubernetes-version:
          - "v1.20.15"
          - "v1.21.14"
          - "v1.22.12"
          - "v1.23.9"
          - "v1.24.3"
          - "v1.25.0"
        emqx:
          - [EmqxBroker, emqx, "config/samples/emqx/v1beta3/emqxbroker-slim.yaml"]
          - [EmqxBroker, emqx, "config/samples/emqx/v1beta3/emqxbroker-full.yaml"]
          - [EmqxEnterprise, emqx-ee, "config/samples/emqx/v1beta3/emqxenterprise-slim.yaml"]
          - [EmqxEnterprise, emqx-ee, "config/samples/emqx/v1beta3/emqxenterprise-full.yaml"]

    steps:
      - run: minikube start --kubernetes-version="${{ matrix.kubernetes-version }}"
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18.3'
      - name: Deploy operator
        timeout-minutes: 5
        uses: ./.github/actions/deploy-operator
        with:
          repository: ghcr.io/${{ github.repository }}
          tag: ${{ github.ref_name }}
      - name: Deploy emqx
        timeout-minutes: 5
        uses: ./.github/actions/deploy-emqx
        with:
          kind: ${{ matrix.emqx[0] }}
          name: ${{ matrix.emqx[1] }}
          file: ${{ matrix.emqx[2] }}
      - if: failure()
        run: kubectl logs -l "control-plane=controller-manager" -n emqx-operator-system -c manager --tail=1000
      - if: failure()
        run: kubectl get ${{ matrix.emqx[0] }} ${{ matrix.emqx[1] }} -o json
