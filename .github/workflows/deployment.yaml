name: Deployment emqx by operator

on:
  pull_request:
  push:
    tags:
      - "*"

jobs:
  deployment:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        kind:
          - [emqx, "emqx/emqx:4.3.0"]
          - [emqx, "emqx/emqx:4.3.1"]
          - [emqx, "emqx/emqx:4.3.2"]
          - [emqx, "emqx/emqx:4.3.3"]
          - [emqx, "emqx/emqx:4.3.4"]
          - [emqx, "emqx/emqx:4.3.5"]
          - [emqx, "emqx/emqx:4.3.6"]
          - [emqx, "emqx/emqx:4.3.7"]
          - [emqx, "emqx/emqx:4.3.8"]
          - [emqx, "emqx/emqx:4.3.9"]
          - [emqx, "emqx/emqx:4.3.10"]
          - [emqx-ee, "emqx/emqx-ee:4.3.0"]
          - [emqx-ee, "emqx/emqx-ee:4.3.1"]
          - [emqx-ee, "emqx/emqx-ee:4.3.2"]
          - [emqx-ee, "emqx/emqx-ee:4.3.3"]
          - [emqx-ee, "emqx/emqx-ee:4.3.4"]
          - [emqx-ee, "emqx/emqx-ee:4.3.5"]
    steps:
      - run: minikube start
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.17.3'
      - name: Build controller image
        env:
          IMG: "emqx/emqx-operator-controller:${{ github.sha }}"
        run: eval $(minikube docker-env) && docker build -t $IMG .
      - name: Deploy controller and crd
        env:
          IMG: "emqx/emqx-operator-controller:${{ github.sha }}"
        run: |
          make manifests
          kubectl apply -f config/crd/bases
          sed -i "s|image:[[:space:]].*|image: $IMG|g" config/samples/operator/controller.yaml
          kubectl apply -f config/samples/operator
      - name: Check operator
        timeout-minutes: 15
        run: |
          set -euo pipefail
          while ! kubectl describe pods -l "control-plane=controller-manager" -n system | grep -qE 'Status:[ \t]+Running?'; do
            echo "waiting operator controller pod running"
            sleep 1
          done
      - name: Deployment emqx
        uses: ./.github/actions/deployment
        with:
          kind:  ${{ matrix.kind[0] }}
          image: ${{ matrix.kind[1] }}
      - name: Get controller status
        if: failure()
        run: |
          set -x
          kubectl logs -l "control-plane=controller-manager" -n system -c manager
