{{- if .Values.webhooks.conversion.enable -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "emqx-operator.fullname" . }}-conversion-patch
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    {{- include "emqx-operator.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      {{- with .Values.webhooks.conversion.patch.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "emqx-operator.labels" . | nindent 8 }}
    spec:
      restartPolicy: OnFailure
      serviceAccountName: {{ include "emqx-operator.patchServiceAccountName" . }}
      containers:
      - name: conversion-patch
        image: "{{ .Values.webhooks.conversion.patch.image.repository }}:{{ .Values.webhooks.conversion.patch.image.tag | default "latest" }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - bash
        - -c
        - |
          set -euo pipefail
          set -x
          for r in emqxbrokers.apps.emqx.io emqxenterprises.apps.emqx.io emqxplugins.apps.emqx.io; do
            {{- if (index .Values "webhooks" "cert" "cert-manager" "enable") }}
            kubectl patch crd $r --type merge -p '
              {
                "metadata": {
                  "annotations": {
                    "cert-manager.io/inject-ca-from": "{{ .Release.Namespace }}/{{ include "emqx-operator.fullname" . }}-serving-cert"
                  }
                }
              }
            '
            {{- end }}
            kubectl patch crd $r --type merge -p '
              {
                "spec": {
                  "conversion": {
                    "strategy": "Webhook",
                    "webhook": {
                      "clientConfig": {
                        "service": {
                          "namespace": "{{ .Release.Namespace }}",
                          "name": "{{ include "emqx-operator.fullname" . }}-webhook-service",
                          "path": "/convert"
                        }
                      },
                      "conversionReviewVersions": [
                        "v1"
                      ]
                    }
                  }
                }
              }
            '
          done
        resources:
          {{- toYaml .Values.webhooks.conversion.patch.resources | nindent 12 }}
      {{- with .Values.webhooks.conversion.patch.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.webhooks.conversion.patch.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.webhooks.conversion.patch.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}